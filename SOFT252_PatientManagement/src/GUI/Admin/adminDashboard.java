/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Admin;

//import General.doctorFeedback;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import System.*;
import Users.*;

/**
 *
 * @author patrick
 */
public class adminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form adminDashboard
     */
    public adminDashboard() {
        initComponents();
        loadPatients();
        loadAdmins();
        loadSecretaries();
        loadDoctors();
        
                

    }
    
    public void loadPatients()
    {
        List<Patient> patients = main.patients;
        
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) patientsTbl.getModel();
        model.setRowCount(0);
        
        model.setRowCount(patients.size());
        patientsTbl.setModel(model);
        
        for (int i =0; i < patients.size(); i++){
            patientsTbl.setValueAt(patients.get(i).getUserId(), i, 0);
            patientsTbl.setValueAt(patients.get(i).getName(), i, 1);

        }   
    }
  
    public void loadDoctors()
    {
        List<Doctor> doctors = main.doctors;
        
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) doctorsTbl.getModel();
        model.setRowCount(0);
        
        model.setRowCount(doctors.size());
        doctorsTbl.setModel(model);
        
        for (int i =0; i < doctors.size(); i++){
            doctorsTbl.setValueAt(doctors.get(i).getUserId(), i, 0);
            doctorsTbl.setValueAt(doctors.get(i).getName(), i, 1);

        }     
    }
    
    
    public void loadSecretaries()
    {
        List<Secretary> secretaries = main.secretaries;
        
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) secretariesTbl.getModel();
        model.setRowCount(0);
        
        model.setRowCount(secretaries.size());
        secretariesTbl.setModel(model);
        
        for (int i =0; i < secretaries.size(); i++){
            secretariesTbl.setValueAt(secretaries.get(i).getUserId(), i, 0);
            secretariesTbl.setValueAt(secretaries.get(i).getName(), i, 1);

        }     
    }
    
    
    public void loadAdmins()
    {
        List<Admin> admins = main.admins;
        
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) adminsTbl.getModel();
        model.setRowCount(0);
        
        model.setRowCount(admins.size());
        adminsTbl.setModel(model);
        
        for (int i =0; i < admins.size(); i++){
            adminsTbl.setValueAt(admins.get(i).getUserId(), i, 0);
            adminsTbl.setValueAt(admins.get(i).getName(), i, 1);

        }     
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        usersTbl2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        ratingsBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        patientsTbl = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        doctorsTbl = new javax.swing.JTable();
        addDoctorBtn = new javax.swing.JButton();
        removeDoctorBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        secretariesTbl = new javax.swing.JTable();
        addAdminBtn = new javax.swing.JButton();
        removeAdminBtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        adminsTbl = new javax.swing.JTable();
        addSecretaryBtn = new javax.swing.JButton();
        removeSecretaryBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        logOffBtn = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        usersTbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Name"
            }
        ));
        jScrollPane5.setViewportView(usersTbl2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Patients");

        ratingsBtn.setText("View Doctor Ratings");
        ratingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingsBtnActionPerformed(evt);
            }
        });

        patientsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "User ID", "Name"
            }
        ));
        jScrollPane3.setViewportView(patientsTbl);

        doctorsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "User ID", "Name"
            }
        ));
        jScrollPane4.setViewportView(doctorsTbl);

        addDoctorBtn.setText("Add");
        addDoctorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorBtnActionPerformed(evt);
            }
        });

        removeDoctorBtn.setText("Remove");
        removeDoctorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDoctorBtnActionPerformed(evt);
            }
        });

        secretariesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "User ID", "Name"
            }
        ));
        jScrollPane6.setViewportView(secretariesTbl);

        addAdminBtn.setText("Add");
        addAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAdminBtnActionPerformed(evt);
            }
        });

        removeAdminBtn.setText("Remove");
        removeAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAdminBtnActionPerformed(evt);
            }
        });

        adminsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "User ID", "Name"
            }
        ));
        jScrollPane7.setViewportView(adminsTbl);

        addSecretaryBtn.setText("Add");
        addSecretaryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSecretaryBtnActionPerformed(evt);
            }
        });

        removeSecretaryBtn.setText("Remove");
        removeSecretaryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSecretaryBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Secretaries");

        jLabel3.setText("Admins");

        jLabel4.setText("Doctors");

        logOffBtn.setText("Log Off");
        logOffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOffBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addSecretaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeSecretaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(addDoctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeDoctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel4))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ratingsBtn)
                    .addComponent(logOffBtn))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 20, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeDoctorBtn)
                    .addComponent(addDoctorBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAdminBtn)
                    .addComponent(removeAdminBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(logOffBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeSecretaryBtn)
                            .addComponent(addSecretaryBtn)
                            .addComponent(ratingsBtn))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ratingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingsBtnActionPerformed
        // TODO add your handling code here:
        doctorFeedback dash = new doctorFeedback();
        dash.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ratingsBtnActionPerformed

    private void addDoctorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorBtnActionPerformed
        // TODO add your handling code here:
        adminCreateAccount createAccount = new adminCreateAccount();
        createAccount.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addDoctorBtnActionPerformed

    private void removeDoctorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDoctorBtnActionPerformed
        // TODO add your handling code here:
        int selected = doctorsTbl.getSelectedRow();
        if (selected == -1)
        {
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Please select an account to remove");
        }
        else 
        {
            Doctor doctor = null;
            for (int i=0; i<main.doctors.size();i++)
            {
                if (main.doctors.get(i).getUserId().equals(doctorsTbl.getValueAt(selected, 0).toString()))
                {
                    doctor = main.doctors.get(i);
                }
            }
            main.doctors.remove(doctor);
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Account has been removed");
            this.dispose();
            adminDashboard dash = new adminDashboard();
            dash.setVisible(true);
        }
    }//GEN-LAST:event_removeDoctorBtnActionPerformed

    private void addAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAdminBtnActionPerformed
        // TODO add your handling code here:
        adminCreateAdmin createAdmin = new adminCreateAdmin();
        this.dispose();
        createAdmin.setVisible(true);
    }//GEN-LAST:event_addAdminBtnActionPerformed

    private void removeAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAdminBtnActionPerformed
        // TODO add your handling code here:
        int selected = adminsTbl.getSelectedRow();
        if (selected == -1)
        {
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Please select an account to remove");
        }
        else 
        {
            Admin admin = null;
            for (int i=0; i<main.admins.size();i++)
            {
                if (main.admins.get(i).getUserId().equals(adminsTbl.getValueAt(selected, 0).toString()))
                {
                    admin = main.admins.get(i);
                }
            }
            main.admins.remove(admin);
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Account has been removed");
            this.dispose();
            adminDashboard dash = new adminDashboard();
            dash.setVisible(true);
        }
    }//GEN-LAST:event_removeAdminBtnActionPerformed

    private void addSecretaryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSecretaryBtnActionPerformed
        // TODO add your handling code here:
        adminCreateAccount createAccount = new adminCreateAccount();
        createAccount.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addSecretaryBtnActionPerformed

    private void removeSecretaryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSecretaryBtnActionPerformed
        // TODO add your handling code here:
        int selected = secretariesTbl.getSelectedRow();
        if (selected == -1)
        {
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Please select an account to remove");
        }
        else 
        {
            Secretary secretary = null;
            for (int i=0; i<main.secretaries.size();i++)
            {
                if (main.secretaries.get(i).getUserId().equals(secretariesTbl.getValueAt(selected, 0).toString()))
                {
                    secretary = main.secretaries.get(i);
                }
            }
            main.secretaries.remove(secretary);
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Account has been removed");
            this.dispose();
            adminDashboard dash = new adminDashboard();
            dash.setVisible(true);
        }
    }//GEN-LAST:event_removeSecretaryBtnActionPerformed

    private void logOffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOffBtnActionPerformed
        // TODO add your handling code here:
        main.currentUser = null;
        this.dispose();
        LoginScreen dash = new LoginScreen();
        dash.setVisible(true);
    }//GEN-LAST:event_logOffBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminDashboard().setVisible(true);
            }
        });
    }
    
   // public static systemUser[] removeUser(systemUser[] oldUsers, String username){
        
    //}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAdminBtn;
    private javax.swing.JButton addDoctorBtn;
    private javax.swing.JButton addSecretaryBtn;
    private javax.swing.JTable adminsTbl;
    private javax.swing.JTable doctorsTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logOffBtn;
    private javax.swing.JTable patientsTbl;
    private javax.swing.JButton ratingsBtn;
    private javax.swing.JButton removeAdminBtn;
    private javax.swing.JButton removeDoctorBtn;
    private javax.swing.JButton removeSecretaryBtn;
    private javax.swing.JTable secretariesTbl;
    private javax.swing.JTable usersTbl2;
    // End of variables declaration//GEN-END:variables
}
